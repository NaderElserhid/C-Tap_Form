<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>